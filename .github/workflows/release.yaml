name: Release images and chart
on:
  release:
    types:
      - released

env:
  REGISTRY: ghcr.io
  IMAGE_BASE: ${{ github.repository }}

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - id: createImageTag
        name: Create image tag
        run: |
          IMAGE_TAG=$(echo ${{ github.event.release.tag_name }} | sed 's/v//')
          echo "::set-output name=imageTag::$IMAGE_TAG"
    outputs:
      imageTag: ${{ steps.createImageTag.outputs.imageTag }}

  release-images:
    name: Build and release images
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        image: ["finish", "pipeline-manager", "start"]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and release Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: build/images/Dockerfile.${{ matrix.image }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE }}/${{ matrix.image }}:${{ needs.setup.outputs.imageTag }}
