/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */
buildscript {
    ext {
        odsOutputDir = System.getenv('ODS_OUTPUT_DIR')
        nexus_url = System.getenv('NEXUS_URL')
        nexus_user = System.getenv('NEXUS_USERNAME')
        nexus_pw = System.getenv('NEXUS_PASSWORD')
    }
}

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    maven() {
        url "${nexus_url}/repository/jcenter/"
        credentials {
            username = "${nexus_user}"
            password = "${nexus_pw}"
        }
        /*
         this setting is only added bcs. nexus in test runs under http, don't use this as a blueprint for your
         */
        allowInsecureProtocol = true
    }

    maven() {
        url "${nexus_url}/repository/maven-public/"
        credentials {
            username = "${nexus_user}"
            password = "${nexus_pw}"
        }
        /*
         this setting is only added bcs. nexus in test runs under http, don't use this as a blueprint for your
         */
        allowInsecureProtocol = true
    }

    maven() {
        url "${nexus_url}/repository/atlassian_public/"
        credentials {
            username = "${nexus_user}"
            password = "${nexus_pw}"
        }
        /*
        this setting is only added bcs. nexus in test runs under http, don't use this as a blueprint for your
        */
        allowInsecureProtocol = true
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'java.gradle.sample.app.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

jar {
    println("Set application jar name to 'app'")
    archiveBaseName = 'app'
    if (odsOutputDir != null) {
        println("Set destinationDirectory to '${projectDir}/${odsOutputDir}'")
        destinationDirectory = file("${projectDir}/${odsOutputDir}")
    }
}
