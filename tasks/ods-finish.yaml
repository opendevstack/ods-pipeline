
# Source: tasks/templates/task-ods-finish.yaml
apiVersion: tekton.dev/v1beta1
kind: 'Task'
metadata:
  name: 'ods-finish'
  annotations:
    "helm.sh/resource-policy": keep
spec:
  description: |
    Finishes the pipeline run.

    See https://github.com/opendevstack/ods-pipeline/blob/v0.11.0/docs/tasks/ods-finish.adoc
  params:
    - name: pipeline-run-name
      description: Name of pipeline run.
      type: string
    - name: aggregate-tasks-status
      description: Aggregate status of all tasks.
      default: "None"
  steps:
    - name: ods-finish
      # Image is built from build/package/Dockerfile.finish.
      image: 'ghcr.io/opendevstack/ods-pipeline/ods-finish:0.11.0'
      env:
        - name: HOME
          value: '/tekton/home'
        - name: NEXUS_URL
          valueFrom:
            configMapKeyRef:
              key: url
              name: ods-nexus
        - name: NEXUS_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: ods-nexus-auth
        - name: NEXUS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: ods-nexus-auth
        - name: NEXUS_TEMPORARY_REPOSITORY
          valueFrom:
            configMapKeyRef:
              key: temporaryRepository
              name: ods-nexus
        - name: NEXUS_PERMANENT_REPOSITORY
          valueFrom:
            configMapKeyRef:
              key: permanentRepository
              name: ods-nexus
        - name: BITBUCKET_URL
          valueFrom:
            configMapKeyRef:
              key: url
              name: ods-bitbucket
        - name: BITBUCKET_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: ods-bitbucket-auth
        - name: CONSOLE_URL
          valueFrom:
            configMapKeyRef:
              key: consoleUrl
              name: ods-cluster
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: ods-pipeline
      resources: {}
      script: |

        # ods-finish is built from cmd/finish/main.go.
        ods-finish \
          -pipeline-run-name=$(params.pipeline-run-name) \
          -aggregate-tasks-status=$(params.aggregate-tasks-status)
      volumeMounts:
        - mountPath: /etc/ssl/certs/private-cert.pem
          name: private-cert
          readOnly: true
          subPath: tls.crt
      workingDir: $(workspaces.source.path)
  volumes:
    - name: private-cert
      secret:
        secretName: ods-private-cert
        optional: true
  workspaces:
    - description: The git repo will be present onto the volume backing this workspace
      name: source
