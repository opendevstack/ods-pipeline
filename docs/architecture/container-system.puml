@startuml "container-system"
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
' uncomment the following line and comment the first to use locally
' !include C4_Container.puml

LAYOUT_LEFT_RIGHT()

AddRelTag("optional", $lineStyle = DashedLine())

Person(developer, "Developer")

System_Boundary(pipeline, "ODS Pipeline"){

    Container(installation, "ODS Pipeline Installation", "Kubernetes resources", "ODS pipeline manager, config maps and secrets + Tekton tasks to use in pipelines")

    Container(pipeline_run, "Pipeline Run", "PipelineRun Kubernetes resources", "Run of one pipeline")

}

System_Boundary(core, "ODS Core"){

    Container(nexus, "Nexus", "Artifact Repository", "HTTP proxy for 3rd party dependencies, hosting for private dependencies and storage of artifacts")

    Container(sonarqube, "SonarQube", "Statical Analyzer", "Statical source code analysis")

    Container(aqua, "Aqua", "Vulnerability Scanner", "Scans container images and 3rd party dependencies for vulnerabilities")

}

System_Boundary(atlassian, "Atlassian"){

    Container(bitbucket, "Bitbucket", "Version Control Server", "Git repository server")

}

System_Boundary(release_cluster, "Release Cluster"){

    Container(release_namespace, "Release Namespace", "Kubernetes namespace", "Namespace or project (on same or external cluster) for applications")

}

System_Boundary(webhook_receiver_system, "Notification System") {
    Container(webhook_receiver, "Webhook Receiver", "HTTPS Service", "Notification receiver (e.g. Microsoft Teams, Slack, etc.)")
}

Rel(pipeline_run, nexus, "downloads dependencies")
Rel(pipeline_run, nexus, "uploads artifacts")
Rel(pipeline_run, sonarqube, "analyzes source code")
Rel(pipeline_run, aqua, "scans for vulnerabilities")
Rel(pipeline_run, bitbucket, "checks out source code, sets build status")
Rel(bitbucket, installation, "triggers")
Rel(installation, pipeline_run, "creates")
Rel(pipeline_run, installation, "uses config maps, tasks and secrets")
Rel(pipeline_run, release_namespace, "deploys to")
Rel(developer, bitbucket, "pushes")
Rel(pipeline_run, webhook_receiver, "send status notification", $tags="optional")

@enduml
