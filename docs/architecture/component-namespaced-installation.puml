@startuml "namespaced-installation"
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
' uncomment the following line and comment the first to use locally
' !include C4_Container.puml

LAYOUT_LEFT_RIGHT()

Container_Boundary(c1, "Namespaced ODS Pipeline Installation"){
    Boundary(config, "Configuration & Management") {
        Component(route, "Route", "Route resource", "External endpoint for Bitbucket webhook")
        Component(ods_pipeline_manager, "ODS Pipeline Manager", "Custom service", "Manage pipelines")
        Component(config_maps, "Config Maps", "ConfigMap resources", "Configuration for consumption by pipelines")
        Component(secrets, "Secrets", "Secret resources", "Secret for consumption by pipelines")
    }

    Boundary(tasks, "Tasks") {
        Component(task_build_go, "ods-build-go", "Task", "Builds Go (module) applications")
        Component(task_build_npm, "ods-build-npm", "Task", "Builds Node.js based applications using npm")
        Component(task_build_python, "ods-build-python", "Task", "Builds Python applications")
        Component(task_build_gradle, "ods-build-gradle", "Task", "Builds JDK based applications using Gradle")
        Component(task_package_image, "ods-package-image", "Task", "Packages container images")
        Component(task_deploy_helm, "ods-deploy-helm", "Task", "Deploys Helm charts")
        Component(task_start, "ods-start", "Task", "Starts pipeline run (checkout repository, set build status, download artifacts, ...)")
        Component(task_finish, "ods-finish", "Task", "Finishes pipeline run (set build status, upload artifacts, ...)")
    }

}

Rel(ods_pipeline_manager, route, "exposed via")

config_maps -[hidden]- secrets

@enduml
