apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ods-start
spec:
  description: |
    Starts the pipeline run.

    This task will clone a repo from the provided url into the workspace, and
    sets the build status of the checked out commit in Bitbucket to "in progress".

    This task is automatically added to any pipeline run as the first task
    by the webhook interceptor and cannot be customized by users at this point.
  params:
    - name: url
      description: Git URL to clone
      type: string
    - name: git-full-ref
      description: 'Git revision to checkout (branch, tag, sha, ref, ...)'
      type: string
      default: ''
    - name: refspec
      description: (Optional) Git refspec to fetch before checking out revision.
      type: string
      default: ''
    - name: submodules
      description: Defines if the resource should initialize and fetch the submodules.
      type: string
      default: 'true'
    - name: depth
      description: >-
        Performs a shallow clone where only the most recent commit(s) will be
        fetched.
      type: string
      default: '1'
    - name: ssl-verify
      description: >-
        Defines if http.sslVerify should be set to `true` or `false` in the global
        Git config.
      type: string
      default: 'true'
    - name: http-proxy
      description: Git HTTP proxy server for non-SSL requests.
      type: string
      default: ''
    - name: https-proxy
      description: Git HTTPS proxy server for SSL requests.
      type: string
      default: ''
    - name: no-proxy
      description: Git no proxy - opt out of proxying HTTP/HTTPS requests.
      type: string
      default: ''
    - name: project
      description: >-
        Name of the project to build.
        The project is equal to the Bitbucket project of the repository to clone.
      type: string
    - name: component
      description: >-
        Name of the component to build.
        The component is the repository name without "project" prefix.
      type: string
    - name: repository
      description: Name of the Bitbucket repository to clone.
      type: string
    - name: pr-key
      description: >-
        Bitbucket pull request key.
        Empty if there is no open PR for the specified Git branch.
      type: string
      default: ''
    - name: pr-base
      description: >-
        Bitbucket pull request base branch.
        Empty if there is no open PR for the specified Git branch.
      type: string
      default: ''
    - name: pipeline-run-name
      description: Name of pipeline run.
      type: string
  results:
    - description: The precise commit SHA that was fetched by this Task
      name: commit
    - description: The precise URL that was fetched by this Task
      name: url
  steps:
    - name: ods-start
      image: build/package/Dockerfile.start
      env:
        - name: BITBUCKET_URL
          valueFrom:
            configMapKeyRef:
              key: url
              name: ods-bitbucket
        - name: BITBUCKET_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: ods-bitbucket-auth
        - name: CONSOLE_URL
          valueFrom:
            configMapKeyRef:
              key: consoleUrl
              name: ods-cluster
      resources: {}
      workingDir: $(workspaces.source.path)
      script: |

        # ods-start is built from cmd/start/main.go.
        ods-start \
          -project=$(params.project) \
          -repository=$(params.repository) \
          -component=$(params.component) \
          -git-full-ref=$(params.git-full-ref) \
          -git-ref-spec=$(params.refspec) \
          -url=$(params.url) \
          -http-proxy=$(params.http-proxy) \
          -https-proxy=$(params.https-proxy) \
          -no-proxy=$(params.no-proxy) \
          -ssl-verify=$(params.ssl-verify) \
          -submodules=$(params.submodules) \
          -depth=$(params.depth) \
          -pipeline-run-name=$(params.pipeline-run-name)

        cp .ods/git-commit-sha $(results.commit.path)

        echo -n "$(params.url)" > $(results.url.path)

  workspaces:
    - description: The git repo will be cloned onto the volume backing this workspace
      name: source
