apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ods-build-python-v0-1-0
spec:
  description: ODS Build Python applications
  params:
    - default: "image-registry.openshift-image-registry.svc:5000/ods/ods-build-python:latest"
      description: The location of the Python builder image.
      name: python-image
      type: string
    - default: "image-registry.openshift-image-registry.svc:5000/ods/ods-sonar:latest"
      description: The location of the Sonar image.
      name: sonar-image
      type: string
    - default: "false"
      description: Whether quality gate needs to pass.
      name: sonar-quality-gate
      type: string
    - default: "false"
      description: Whether to skip the SonarQube analysis or not.
      name: sonar-skip
      type: string
  steps:
    - # default image: build/package/Dockerfile.python-toolset
      image: $(params.python-image)
      name: build-python
      resources: {}
      script: |

        # build-python is build/package/scripts/build-python.sh.
        build-python
      workingDir: $(workspaces.source.path)
    - # default image: build/package/Dockerfile.sonar
      image: $(params.sonar-image)
      name: scan-with-sonar
      env:
        - name: SONAR_URL
          valueFrom:
            configMapKeyRef:
              key: url
              name: ods-sonar
        - name: SONAR_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: ods-sonar-auth
        - name: BITBUCKET_URL
          valueFrom:
            configMapKeyRef:
              key: url
              name: ods-bitbucket
        - name: BITBUCKET_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: ods-bitbucket-auth
      resources: {}
      script: |
        if [ "$(params.sonar-skip)" = "true" ]; then
          echo "Skipping SonarQube analysis"
        else
          mkdir -p .ods/artifacts/sonarqube-analysis
          # sonar is built from cmd/sonar/main.go.
          sonar -quality-gate=$(params.sonar-quality-gate)
        fi
      workingDir: $(workspaces.source.path)
  workspaces:
    - name: source
