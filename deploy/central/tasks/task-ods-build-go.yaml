apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: ods-build-go
spec:
  description: |
    Builds Go applications.
    The Go source code is checked against gofmt and linted with golangci-lint before it is built.
    Tests are executed and xUnit and coverage reports generated.
  params:
    - default: "false"
      description: Whether to enable CGO.
      name: enable-cgo
      type: string
    - default: ""
      description: GOOS variable.
      name: go-os
      type: string
    - default: ""
      description: GOARCH variable.
      name: go-arch
      type: string
    - default: "false"
      description: Whether quality gate needs to pass.
      name: sonar-quality-gate
      type: string
    - default: "false"
      description: Whether to skip the SonarQube analysis or not.
      name: sonar-skip
      type: string
  steps:
    - name: build-go-binary
      image: build/package/Dockerfile.go-toolset
      resources: {}
      script: |

        # build-go is build/package/scripts/build-go.sh.
        build-go \
          --enable-cgo=$(params.enable-cgo) \
          --go-os=$(params.go-os) \
          --go-arch=$(params.go-arch)
      workingDir: $(workspaces.source.path)
    - name: scan-with-sonar
      image: build/package/Dockerfile.sonar
      env:
        - name: SONAR_URL
          valueFrom:
            configMapKeyRef:
              key: url
              name: ods-sonar
        - name: SONAR_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: ods-sonar-auth
        - name: BITBUCKET_URL
          valueFrom:
            configMapKeyRef:
              key: url
              name: ods-bitbucket
        - name: BITBUCKET_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: ods-bitbucket-auth
      resources: {}
      script: |
        if [ "$(params.sonar-skip)" = "true" ]; then
          echo "Skipping SonarQube analysis"
        else
          mkdir -p .ods/artifacts/sonarqube-analysis
          # sonar is built from cmd/sonar/main.go.
          sonar -quality-gate=$(params.sonar-quality-gate)
        fi
      workingDir: $(workspaces.source.path)
  workspaces:
    - name: source
