apiVersion: tekton.dev/v1beta1
kind: '{{default "Task" .Values.global.taskKind}}'
metadata:
  name: '{{default "ods" .Values.taskPrefix}}-finish{{- include "taskSuffix" .}}'
  annotations:
    "helm.sh/resource-policy": keep
spec:
  description: |
    Finishes the pipeline run.

    This task uploads generated artifacts to Nexus, and sets the build status of
    the built commit in Bitbucket according to the aggregate task status.

    If configured, the task sends notifications to a defined webhook receiver. The HTTP method,
    payload content type, webhook URL, status values that trigger a notification, and a template
    for the payload to be sent can be configured via the `ods-notification` ConfigMap. An example
    configuration for Microsoft Teams (excluding the webhook URL) is included in the ods-pipeline
    standard installation.

    This task is automatically added to any pipeline run in as a `finally` task
    by the pipeline manager and cannot be customized by users at this point.

    The following artifacts are generated by the task and placed into `.ods/artifacts/`

    * `pipeline-runs/`
      ** `<pipeline-run-name>.json`
  params:
    - name: pipeline-run-name
      description: Name of pipeline run.
      type: string
    - name: aggregate-tasks-status
      description: Aggregate status of all tasks.
      default: "None"
  steps:
    - name: ods-finish
      # Image is built from build/package/Dockerfile.finish.
      image: '{{.Values.imageRepository}}/ods-finish:{{.Values.global.imageTag | default .Chart.AppVersion}}'
      env:
        - name: HOME
          value: '/tekton/home'
        - name: NEXUS_URL
          valueFrom:
            configMapKeyRef:
              key: url
              name: ods-nexus
        - name: NEXUS_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: ods-nexus-auth
        - name: NEXUS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: ods-nexus-auth
        - name: NEXUS_TEMPORARY_REPOSITORY
          valueFrom:
            configMapKeyRef:
              key: temporaryRepository
              name: ods-nexus
        - name: NEXUS_PERMANENT_REPOSITORY
          valueFrom:
            configMapKeyRef:
              key: permanentRepository
              name: ods-nexus
        - name: BITBUCKET_URL
          valueFrom:
            configMapKeyRef:
              key: url
              name: ods-bitbucket
        - name: BITBUCKET_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: ods-bitbucket-auth
        - name: CONSOLE_URL
          valueFrom:
            configMapKeyRef:
              key: consoleUrl
              name: ods-cluster
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: ods-pipeline
      resources: {}
      script: |

        # ods-finish is built from cmd/finish/main.go.
        ods-finish \
          -pipeline-run-name=$(params.pipeline-run-name) \
          -aggregate-tasks-status=$(params.aggregate-tasks-status)
      volumeMounts:
        - mountPath: /etc/ssl/certs/private-cert.pem
          name: private-cert
          readOnly: true
          subPath: tls.crt
      workingDir: $(workspaces.source.path)
  volumes:
    - name: private-cert
      secret:
        secretName: ods-private-cert
        optional: true
  workspaces:
    - description: The git repo will be present onto the volume backing this workspace
      name: source
