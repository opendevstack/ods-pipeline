FROM registry.access.redhat.com/ubi8/go-toolset:1.16.12 AS builder

ARG TARGETARCH
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
USER root

ENV TEKTON_VERSION=0.24.0 \
    TEKTONCD_PATH=/opt/app-root/src/go/src/github.com/tektoncd \
    BINARY=git-init.orig \
    KO_APP=/ko-app \
    GIT_LFS_VERSION=3.0.2

RUN mkdir -p $TEKTONCD_PATH && \
    cd /tmp && \
    curl -LO https://github.com/tektoncd/pipeline/archive/refs/tags/v$TEKTON_VERSION.tar.gz && \
    tar -C $TEKTONCD_PATH -xzf v$TEKTON_VERSION.tar.gz && \
    ln -s $TEKTONCD_PATH/pipeline-$TEKTON_VERSION $TEKTONCD_PATH/pipeline && \
    cd -

WORKDIR $TEKTONCD_PATH/pipeline

RUN cd /tmp \
    && mkdir -p /tmp/git-lfs \
    && curl -LO https://github.com/git-lfs/git-lfs/releases/download/v${GIT_LFS_VERSION}/git-lfs-linux-${TARGETARCH}-v${GIT_LFS_VERSION}.tar.gz \
    && tar -zxvf git-lfs-linux-${TARGETARCH}-v${GIT_LFS_VERSION}.tar.gz -C /tmp/git-lfs \
    && bash /tmp/git-lfs/install.sh \
    && git lfs version

RUN CGO_ENABLED=0 go build -o /tmp/openshift-pipelines-git-init ./cmd/git-init && \
    mkdir ${KO_APP} && cp /tmp/openshift-pipelines-git-init ${KO_APP}/${BINARY}

# Add Go binaries
RUN mkdir -p /etc/go
COPY go.* /etc/go/
COPY cmd /etc/go/cmd
COPY internal /etc/go/internal
COPY pkg /etc/go/pkg
RUN cd /etc/go/cmd/start && CGO_ENABLED=0 go build -o /usr/local/bin/ods-start

# Final image
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.4

ENV GIT_VERSION=2.27 \
    OPENSSH_CLIENTS_VERSION=8.0

RUN microdnf install git-${GIT_VERSION}* openssh-clients-${OPENSSH_CLIENTS_VERSION}* && microdnf clean all

COPY --from=builder /usr/local/bin/ods-start /usr/local/bin/ods-start

COPY --from=builder /usr/local/bin/git-lfs /usr/local/bin/git-lfs
RUN git lfs version

RUN mkdir /ko-app
COPY --from=builder /ko-app/git-init.orig /ko-app/git-init.orig
COPY build/package/scripts/uidwrapper /ko-app/git-init

USER root
RUN chgrp -R 0 /ko-app && \
    chmod -R g=u /ko-app /etc/passwd

USER 1001

ENTRYPOINT ["/ko-app/git-init"]
