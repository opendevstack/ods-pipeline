FROM golang:1.19 as builder

SHELL ["/bin/bash", "-o", "pipefail", "-c"]
USER root
WORKDIR /usr/src/app

ENV SONAR_SCANNER_VERSION=4.6.2.2472 \
    CNES_REPORT_VERSION=4.0.0

# Build Go binary.
COPY go.mod .
COPY go.sum .
RUN go mod download
COPY cmd cmd
COPY internal internal
COPY pkg pkg
RUN cd cmd/sonar && CGO_ENABLED=0 go build -o /usr/local/bin/sonar

# Install Sonar Scanner.
RUN apt-get update && apt-get install -y unzip \
    && cd /tmp \
    && curl -LO https://repo1.maven.org/maven2/org/sonarsource/scanner/cli/sonar-scanner-cli/${SONAR_SCANNER_VERSION}/sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip \
    && unzip sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip \
    && mv sonar-scanner-${SONAR_SCANNER_VERSION} /usr/local/sonar-scanner-cli

# Install CNES report.
RUN cd /tmp \
    && curl -L https://github.com/cnescatlab/sonar-cnes-report/releases/download/${CNES_REPORT_VERSION}/sonar-cnes-report-${CNES_REPORT_VERSION}.jar -o cnesreport.jar \
    && mkdir /usr/local/cnes \
    && mv cnesreport.jar /usr/local/cnes/cnesreport.jar \
    && chmod +x /usr/local/cnes/cnesreport.jar

# Final image
FROM registry.access.redhat.com/ubi8/nodejs-18:1

ENV NPM_CONFIG_PREFIX=$HOME/.npm-global \
    LANG=en_US.UTF-8 \
    LC_ALL=en_US.UTF-8

RUN echo node version: $(node --version) && \
    echo npm version: $(npm --version) && \
    echo npx version: $(npx --version)

ENV SONAR_EDITION="community" \
    JAVA_HOME=/usr/lib/jvm/jre-11

RUN microdnf install --nodocs java-11-openjdk-headless which && microdnf clean all

COPY --from=builder /usr/local/bin/sonar /usr/local/bin/sonar
COPY --from=builder /usr/local/sonar-scanner-cli /usr/local/sonar-scanner-cli
COPY --from=builder /usr/local/cnes/cnesreport.jar /usr/local/cnes/cnesreport.jar
COPY build/package/scripts/configure-truststore.sh /usr/local/bin/configure-truststore

ENV PATH=/usr/local/sonar-scanner-cli/bin:$PATH

VOLUME /workspace/source

USER 1001
